name: Docker Image CI

on: [push]

env:
  DOCKER_IMAGE_NAME: ghcr.io/sslcom/codesigner:latest

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v1

      - name: Set up Docker Image Name
        run: |
          echo "DOCKER_IMAGE_NAME=ghcr.io/sslcom/codesigner:${{ github.ref_name }}" >> $GITHUB_ENV
        if: startsWith(github.ref, 'refs/tags/')

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/7
          driver-opts: 'image=moby/buildkit:v0.10.5'

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build the Docker Image
        run: docker buildx build --platform linux/amd64,linux/arm64,linux/arm/7 . --file Dockerfile --tag ${{ env.DOCKER_IMAGE_NAME }} --push

  test:
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v1

      - name: Set up Docker Image Name
        run: |
          echo "DOCKER_IMAGE_NAME=ghcr.io/sslcom/codesigner:${{ github.ref_name }}" >> $GITHUB_ENV
        if: startsWith(github.ref, 'refs/tags/')

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT_TOKEN }}

      - name: Pull Docker image to Github package registry
        run: docker pull ${{ env.DOCKER_IMAGE_NAME }}

      - name: Create Artifacts Directory
        shell: bash
        run: |
          mkdir ${GITHUB_WORKSPACE}/artifacts

      - name: Sign Example PS1 File
        run: docker run -i --rm --volume ${GITHUB_WORKSPACE}/artifacts:/codesign/output --env-file .env ${{ env.DOCKER_IMAGE_NAME }} sign -input_file_path=/codesign/examples/codesign.ps1 -output_dir_path=/codesign/output

      - name: Upload Signed Files
        uses: actions/upload-artifact@v3
        with:
          name: codesign.ps1
          path: ./artifacts/codesign.ps1
